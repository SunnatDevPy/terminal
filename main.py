import json
from fastapi import FastAPI, WebSocket
from starlette.websockets import WebSocketDisconnect

from bot import bot
from config import clients

app = FastAPI()


# === WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ ===
@app.websocket("/ws/{device_id}")
async def websocket_endpoint(websocket: WebSocket, device_id: str):
    await websocket.accept()
    clients[device_id] = websocket
    print(f"üì° –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ {device_id} –ø–æ–¥–∫–ª—é—á–∏–ª–æ—Å—å")

    try:
        while True:
            message = await websocket.receive_text()
            if message == "ping":
                print(f"üîÑ –ü–∏–Ω–≥ –æ—Ç {device_id}")
                continue

            print(f"üì© –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç {device_id}: {message}")
            await bot.send_message(chat_id=5649321700, text=f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {device_id}: {message}")

    except WebSocketDisconnect:
        print(f"‚ùå –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ {device_id} –æ—Ç–∫–ª—é—á–∏–ª–æ—Å—å")
        clients.pop(device_id, None)

    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ WebSocket {device_id}: {e}")
        clients.pop(device_id, None)


# === API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º ===
@app.post("/webhook")
async def webhook(data: dict):
    device_id = data.get("device_id")
    message = json.dumps(data)

    if device_id in clients:
        await clients[device_id].send_text(message)
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É {device_id}: {message}")
        return {"status": "sent"}

    return {"error": "device not connected"}


# === API –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ ===
@app.get("/devices")
async def list_devices():
    return {"connected_devices": list(clients.keys())}